{"ast":null,"code":"var _jsxFileName = \"/Users/tafranchetti/Documents/GitHub/react-box-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BoxList } from './components/BoxList';\nimport { SearchBox } from './components/SearchBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"boxApp.boxes\";\nexport function App() {\n  _s();\n\n  const [boxes, setBoxes] = useState([{\n    id: 1,\n    title: 'Box 1',\n    content: 'This is just an example of a box, remove it and create yours!'\n  }]);\n  const boxTitleRef = useRef();\n  const boxContentRef = useRef();\n  useEffect(() => {\n    const storedBoxes = JSON.parse(localStorage.getItem(KEY));\n\n    if (storedBoxes) {\n      setBoxes(storedBoxes);\n    }\n  }, []);\n\n  const removeBox = id => {\n    const remainingBoxes = boxes.filter(box => box.id !== id);\n    localStorage.setItem(KEY, JSON.stringify(remainingBoxes));\n    setBoxes(remainingBoxes);\n  };\n\n  const addNewBox = evt => {\n    evt.preventDefault();\n    const boxTitle = boxTitleRef.current.value;\n    const boxContent = boxContentRef.current.value;\n    if (boxTitle === '' || boxContent === '') return;\n    const newBoxes = [...boxes, {\n      id: uuidv4(),\n      title: boxTitle,\n      content: boxContent\n    }];\n    setBoxes(newBoxes);\n    localStorage.setItem(KEY, JSON.stringify(newBoxes));\n    boxTitleRef.current.value = null;\n    boxContentRef.current.value = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      boxes: boxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addBoxForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          ref: boxTitleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Content\",\n          ref: boxContentRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: addNewBox,\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoxList, {\n      boxes: boxes,\n      removeBox: removeBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"faKn6RH7bbYSmNrQej7X58/iQrE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useState","useRef","useEffect","v4","uuidv4","BoxList","SearchBox","KEY","App","boxes","setBoxes","id","title","content","boxTitleRef","boxContentRef","storedBoxes","JSON","parse","localStorage","getItem","removeBox","remainingBoxes","filter","box","setItem","stringify","addNewBox","evt","preventDefault","boxTitle","current","value","boxContent","newBoxes"],"sources":["/Users/tafranchetti/Documents/GitHub/react-box-app/src/App.jsx"],"sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4} from 'uuid';\nimport { BoxList } from './components/BoxList';\nimport { SearchBox } from './components/SearchBox';\n\nconst KEY = \"boxApp.boxes\";\n\nexport function App() {\n  const [boxes, setBoxes] = useState([ {id: 1, title: 'Box 1', content: 'This is just an example of a box, remove it and create yours!' } ])\n  \n  const boxTitleRef = useRef();\n  const boxContentRef = useRef();\n\n  useEffect(() => {\n    const storedBoxes = JSON.parse(localStorage.getItem(KEY));\n    if (storedBoxes) {\n      setBoxes(storedBoxes);\n    }\n  }, []);\n\n  const removeBox = (id) => {\n    const remainingBoxes = boxes.filter((box) => box.id !== id);\n    localStorage.setItem(KEY, JSON.stringify(remainingBoxes));\n    setBoxes(remainingBoxes);\n  }\n\n  const addNewBox = (evt) => {\n    evt.preventDefault();\n    const boxTitle = boxTitleRef.current.value;\n    const boxContent = boxContentRef.current.value;\n    if (boxTitle === '' || boxContent === '') return;\n    const newBoxes = [...boxes, { id: uuidv4(), title: boxTitle, content: boxContent }];\n    setBoxes(newBoxes);\n    localStorage.setItem(KEY, JSON.stringify(newBoxes));\n    boxTitleRef.current.value = null;\n    boxContentRef.current.value = null;\n  }\n\n  return (\n    <Fragment>\n      <SearchBox boxes={boxes} />\n      <div>\n        <h2>Add a box</h2>\n        <form className='addBoxForm'>\n          <input type='text' placeholder='Title' ref={boxTitleRef}></input>\n          <input type='text' placeholder='Content' ref={boxContentRef}></input>\n          <button type='submit' onClick={addNewBox}>âž•</button>\n        </form>\n      </div>\n      <BoxList boxes={boxes} removeBox={removeBox}/>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}